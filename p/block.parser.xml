<parserFile>
 <grammar name="BlockParser">
  <rule first="{#, BEGIN, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}" name="Block">
   <action first="{#, BEGIN, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
    <group first="{#, BEGIN, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
     <sequence first="{#, BEGIN, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
      <sequence first="{#, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}" ruleName="DeclarationPart"/>
      </sequence>
      <nonterminal first="{BEGIN}" ruleName="StatementPart"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, BEGIN, CONST, CONSTRUCTOR, EXTERNAL, FORWARD, FUNCTION, PROCEDURE, TYPE, VAR}" name="SubroutineBlock">
   <choice first="{#, BEGIN, CONST, CONSTRUCTOR, EXTERNAL, FORWARD, FUNCTION, PROCEDURE, TYPE, VAR}">
    <choice first="{#, BEGIN, CONST, CONSTRUCTOR, EXTERNAL, FORWARD, FUNCTION, PROCEDURE, TYPE, VAR}">
     <choice first="{EXTERNAL, FORWARD}">
      <action first="{FORWARD}">
       <token first="{FORWARD}" name="FORWARD"/>
      </action>
      <action first="{EXTERNAL}">
       <token first="{EXTERNAL}" name="EXTERNAL"/>
      </action>
     </choice>
     <nonterminal first="{#, BEGIN, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}" ruleName="Block"/>
    </choice>
    <action first="{#}">
     <empty first="{#}"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}" name="DeclarationPart">
   <kleene first="{#, CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
    <group first="{CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
     <choice first="{CONST, CONSTRUCTOR, FUNCTION, PROCEDURE, TYPE, VAR}">
      <choice first="{CONST, TYPE, VAR}">
       <choice first="{CONST, TYPE}">
        <nonterminal first="{CONST}" ruleName="ConstantDeclarationPart"/>
        <nonterminal first="{TYPE}" ruleName="TypeDeclarationPart"/>
       </choice>
       <nonterminal first="{VAR}" ruleName="VariableDeclarationPart"/>
      </choice>
      <nonterminal first="{CONSTRUCTOR, FUNCTION, PROCEDURE}" ruleName="SubroutineDeclarationPart"/>
     </choice>
    </group>
   </kleene>
  </rule>
  <rule first="{CONST}" name="ConstantDeclarationPart">
   <sequence first="{CONST}">
    <token first="{CONST}" name="CONST"/>
    <positive first="{ID}">
     <nonterminal first="{ID}" ruleName="ConstantDeclaration"/>
    </positive>
   </sequence>
  </rule>
  <rule first="{TYPE}" name="TypeDeclarationPart">
   <sequence first="{TYPE}">
    <token first="{TYPE}" name="TYPE"/>
    <positive first="{ID}">
     <nonterminal first="{ID}" ruleName="TypeDeclaration"/>
    </positive>
   </sequence>
  </rule>
  <rule first="{VAR}" name="VariableDeclarationPart">
   <sequence first="{VAR}">
    <token first="{VAR}" name="VAR"/>
    <positive first="{ID}">
     <nonterminal first="{ID}" ruleName="VariableDeclaration"/>
    </positive>
   </sequence>
  </rule>
  <rule first="{CONSTRUCTOR, FUNCTION, PROCEDURE}" name="SubroutineDeclarationPart">
   <positive first="{CONSTRUCTOR, FUNCTION, PROCEDURE}">
    <group first="{CONSTRUCTOR, FUNCTION, PROCEDURE}">
     <choice first="{CONSTRUCTOR, FUNCTION, PROCEDURE}">
      <choice first="{FUNCTION, PROCEDURE}">
       <nonterminal first="{PROCEDURE}" ruleName="ProcedureDeclaration"/>
       <nonterminal first="{FUNCTION}" ruleName="FunctionDeclaration"/>
      </choice>
      <nonterminal first="{CONSTRUCTOR}" ruleName="ConstructorDeclaration"/>
     </choice>
    </group>
   </positive>
  </rule>
  <rule first="{BEGIN}" name="StatementPart">
   <action first="{BEGIN}">
    <group first="{BEGIN}">
     <action first="{BEGIN}">
      <nonterminal first="{BEGIN}" ruleName="CompoundStatement"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ConstantDeclaration">
   <sequence first="{ID}">
    <sequence first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <action first="{ID}">
         <token first="{ID}" name="ID"/>
        </action>
        <token first="{COLON}" name="COLON"/>
       </sequence>
       <action first="{#, AND, ARRAY, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, DOTDOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OBJECT, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}">
        <nonterminal first="{#, AND, ARRAY, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, DOTDOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OBJECT, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Type"/>
       </action>
      </sequence>
      <token first="{EQUAL}" name="EQUAL"/>
     </sequence>
     <nonterminal first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Constant"/>
    </sequence>
    <action first="{SEMICOLON}">
     <token first="{SEMICOLON}" name="SEMICOLON"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" name="Constant">
   <choice first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}">
    <choice first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}">
     <action first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}">
      <nonterminal first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="ConstantExpression"/>
     </action>
     <nonterminal first="{LBRACKET}" ruleName="ArrayConstant"/>
    </choice>
    <nonterminal first="{LPAREN}" ruleName="ObjectConstant"/>
   </choice>
  </rule>
  <rule first="{LBRACKET}" name="ArrayConstant">
   <sequence first="{LBRACKET}">
    <sequence first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <action first="{LBRACKET}">
       <token first="{LBRACKET}" name="LBRACKET"/>
      </action>
      <nonterminal first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Constant"/>
     </sequence>
     <kleene first="{#, COMMA}">
      <group first="{COMMA}">
       <sequence first="{COMMA}">
        <token first="{COMMA}" name="COMMA"/>
        <nonterminal first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Constant"/>
       </sequence>
      </group>
     </kleene>
    </sequence>
    <action first="{RBRACKET}">
     <token first="{RBRACKET}" name="RBRACKET"/>
    </action>
   </sequence>
  </rule>
  <rule first="{LPAREN}" name="ObjectConstant">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <action first="{LPAREN}">
      <token first="{LPAREN}" name="LPAREN"/>
     </action>
     <positive first="{ID}">
      <group first="{ID}">
       <sequence first="{ID}">
        <sequence first="{ID}">
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="FieldName"/>
         </action>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <nonterminal first="{#, AND, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Constant"/>
       </sequence>
      </group>
     </positive>
    </sequence>
    <action first="{RPAREN}">
     <token first="{RPAREN}" name="RPAREN"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ID}" name="FieldName">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
  <rule first="{ID}" name="VariableDeclaration">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <nonterminal first="{ID}" ruleName="IdentifierList"/>
        <token first="{COLON}" name="COLON"/>
       </sequence>
       <nonterminal first="{#, AND, ARRAY, BASE, BOOLEAN, CHAR, CONTROL_STRING, DIV, DOT, DOTDOT, EQUAL, FALSE, GREATER, GREATER_EQUAL, ID, INTEGER, INTEGER_LITERAL, LBRACKET, LESS, LESS_EQUAL, LPAREN, MINUS, MOD, NEW, NIL, NOT, NOT_EQUAL, OBJECT, OR, PLUS, POINTER, QUOTED_STRING, REAL, REAL_LITERAL, SHL, SHR, SLASH, STAR, STRING, THIS, TRUE, XOR}" ruleName="Type"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
